<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>产品设计 on 且徐行</title>
    <link>https://blog.cc1234.cc/tags/%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1/</link>
    <description>Recent content in 产品设计 on 且徐行</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 06 May 2022 09:31:29 +0800</lastBuildDate><atom:link href="https://blog.cc1234.cc/tags/%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>如何设计用户想要的产品？《简约至上》读书笔记</title>
      <link>https://blog.cc1234.cc/posts/how-to-design-product/</link>
      <pubDate>Fri, 06 May 2022 09:31:29 +0800</pubDate>
      
      <guid>https://blog.cc1234.cc/posts/how-to-design-product/</guid>
      <description>引言 谢邀，人在海上，刚下飞机。
《简约至上：交互式设计四策略》是最近读的一本指导产品设计的书，它对我的产品设计方法带来了很大的改变。
书中不仅有设计思维方面的内容，还有执行层面的方法论，让我一个完全依靠直觉和过往经验做功能设计的设计者初次感觉到设计也是有迹可循。
本文算是一篇读后感 + 笔记的混合文，大纲如下
 功能和可用性到底哪一个更受用户关注？ 三类用户：主流、随意型、专家 为自己设计还是为用户设计？ 四策略：删除、组织、隐藏、转移  功能和可用性到底哪一个更受用户关注？ 书中展示了一个 2006 的实验，该实验将用户分为两组去挑选功能数量不同的播放器
 第一组（未试用组）：只能通过观察产品来做挑选 第二组（试用组）：可以试用产品以后再做挑选  播放器的规格如下
 播放器 A：拥有 7 项功能 播放器 B：拥有 21 项功能  最终实验结果如下
    选择播放器 A 的用户比例（7 项功能） 选择播放器 B 的用户比例（21 项功能）     未使用组 34% 66%   试用组 56% 44%    由结果可以看出对于没有机会试用的消费者而言，功能越多越能吸引用户注意；但是消费者使用了产品之后，他们的偏好就会从重视功能转为重视可用性了。
复杂的产品通常很吸引人，这是因为人们喜欢自己被包围在不必要的功能中。
当然这并不是说功能不重要，而是不要以功能的多寡来衡量产品的价值，这里引用一段原文作者的观点：
 增加的功能越多，就越难发现真正对用户有价值的新功能。这样盲目添加的新功能早晚会成为垃圾功能。增加复杂性意味着遗留代码越来越沉重，导致产品维护成本越来越高，而且也越来越难以灵活应对市场变化。
 复杂的功能会导致另一个问题：过多的功能选择会带给用户负担。
 给用户提供选择会让人感觉自己在把控局面，但实际上主流用户更希望少一些选择，尤其是多种选择都很相似的情况下，选择就是一种负担。
简单的用户体验不会强迫用户去做这种选择，哪种方式最有效应该是设计者考虑的事情。</description>
    </item>
    
  </channel>
</rss>
